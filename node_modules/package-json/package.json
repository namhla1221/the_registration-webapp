{
  "_from": "package-json",
  "_id": "package-json@6.5.0",
  "_inBundle": false,
  "_integrity": "sha512-k3bdm2n25tkyxcjSKzB5x8kfVxlMdgsbPr0GkZcwHsLpba6cBjqCt1KlcChKEvxHIcTB1FVMuwoijZ26xex5MQ==",
  "_location": "/package-json",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "package-json",
    "fetchSpec": "latest",
    "name": "package-json",
    "raw": "package-json",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/latest-version"
  ],
  "_resolved": "https://registry.npmjs.org/package-json/-/package-json-6.5.0.tgz",
  "_shasum": "6feedaca35e75725876d0b0e64974697fed145b0",
  "_shrinkwrap": null,
  "_spec": "package-json",
  "_where": "/home/codex-coder/Projects/the_registration_webapp",
  "author": {
    "email": "sindresorhus@gmail.com",
    "name": "Sindre Sorhus",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/package-json/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "got": "^9.6.0",
    "registry-auth-token": "^4.0.0",
    "registry-url": "^5.0.0",
    "semver": "^6.2.0"
  },
  "deprecated": false,
  "description": "Get metadata of a package from the npm registry",
  "devDependencies": {
    "@types/node": "^12.6.8",
    "ava": "^2.2.0",
    "mock-private-registry": "^1.1.2",
    "tsd": "^0.7.4",
    "xo": "^0.24.0"
  },
  "engines": {
    "node": ">=8"
  },
  "files": [
    "index.d.ts",
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/package-json#readme",
  "keywords": [
    "json",
    "module",
    "npm",
    "package",
    "package.json",
    "pkg",
    "registry",
    "scope",
    "scoped"
  ],
  "license": "MIT",
  "name": "package-json",
  "optionalDependencies": {},
  "readme": "# package-json [![Build Status](https://travis-ci.org/sindresorhus/package-json.svg?branch=master)](https://travis-ci.org/sindresorhus/package-json)\n\n> Get metadata of a package from the npm registry\n\n\n## Install\n\n```\n$ npm install package-json\n```\n\n\n## Usage\n\n```js\nconst packageJson = require('package-json');\n\n(async () => {\n\tconsole.log(await packageJson('ava'));\n\t//=> {name: 'ava', ...}\n\n\t// Also works with scoped packages\n\tconsole.log(await packageJson('@sindresorhus/df'));\n})();\n```\n\n\n## API\n\n### packageJson(packageName, options?)\n\n#### packageName\n\nType: `string`\n\nName of the package.\n\n#### options\n\nType: `object`\n\n##### version\n\nType: `string`<br>\nDefault: `latest`\n\nPackage version such as `1.0.0` or a [dist tag](https://docs.npmjs.com/cli/dist-tag) such as `latest`.\n\nThe version can also be in any format supported by the [semver](https://github.com/npm/node-semver) module. For example:\n\n- `1` - Get the latest `1.x.x`\n- `1.2` - Get the latest `1.2.x`\n- `^1.2.3` - Get the latest `1.x.x` but at least `1.2.3`\n- `~1.2.3` - Get the latest `1.2.x` but at least `1.2.3`\n\n##### fullMetadata\n\nType: `boolean`<br>\nDefault: `false`\n\nBy default, only an abbreviated metadata object is returned for performance reasons. [Read more.](https://github.com/npm/registry/blob/master/docs/responses/package-metadata.md)\n\n##### allVersions\n\nType: `boolean`<br>\nDefault: `false`\n\nReturn the [main entry](https://registry.npmjs.org/ava) containing all versions.\n\n##### registryUrl\n\nType: `string`<br>\nDefault: Auto-detected\n\nThe registry URL is by default inferred from the npm defaults and `.npmrc`. This is beneficial as `package-json` and any project using it will work just like npm. This option is **only** intended for internal tools. You should **not** use this option in reusable packages. Prefer just using `.npmrc` whenever possible.\n\n##### agent\n\nType: `http.Agent | https.Agent | object | false`\n\nOverwrite the `agent` option that is passed down to [`got`](https://github.com/sindresorhus/got#agent). This might be useful to add [proxy support](https://github.com/sindresorhus/got#proxies).\n\n\n### packageJson.PackageNotFoundError\n\nThe error thrown when the given package name cannot be found.\n\n### packageJson.VersionNotFoundError\n\nThe error thrown when the given package version cannot be found.\n\n\n## Authentication\n\nBoth public and private registries are supported, for both scoped and unscoped packages, as long as the registry uses either bearer tokens or basic authentication.\n\n\n## Related\n\n- [package-json-cli](https://github.com/sindresorhus/package-json-cli) - CLI for this module\n- [latest-version](https://github.com/sindresorhus/latest-version) - Get the latest version of an npm package\n- [pkg-versions](https://github.com/sindresorhus/pkg-versions) - Get the version numbers of a package from the npm registry\n- [npm-keyword](https://github.com/sindresorhus/npm-keyword) - Get a list of npm packages with a certain keyword\n- [npm-user](https://github.com/sindresorhus/npm-user) - Get user info of an npm user\n- [npm-email](https://github.com/sindresorhus/npm-email) - Get the email of an npm user\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-package-json?utm_source=npm-package-json&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/package-json.git"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "version": "6.5.0"
}
